# .github/workflows/docker-publish.yml

name: 'Publish mosdns-x Docker Image'

on:
  # 允许手动触发工作流（不再需要输入版本）
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1. 检出你的代码仓库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 自动获取 mosdns-x 的最新版本号
      - name: Get Latest Version Tag
        id: get_version
        run: |
          echo "Fetching the latest version from pmkol/mosdns-x..."
          # 通过 GitHub API 获取上游仓库的最新 release 版本标签
          VERSION=$(curl -s "https://api.github.com/repos/pmkol/mosdns-x/releases/latest" | grep -oP '"tag_name": "\K[^"]+')
          if [ -z "$VERSION" ]; then
            echo "Failed to fetch the latest version tag."
            exit 1
          fi
          echo "Using latest version: $VERSION"
          # 将版本号设置为后续步骤可以使用的环境变量
          echo "TAG=$VERSION" >> $GITHUB_ENV

      # 3. 设置 QEMU，用于跨平台构建
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 4. 设置 Docker Buildx，支持多平台构建的核心工具
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5. 登录到 GitHub Container Registry (ghcr.io)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 6. 构建并推送多架构镜像
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/mosdns-x:latest
            ghcr.io/${{ github.repository_owner }}/mosdns-x:${{ env.TAG }}
          build-args: |
            VERSION=${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
